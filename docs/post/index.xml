<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 友知弄</title>
    <link>https://yixy.github.io/youzhilane/post/</link>
    <description>Recent content in Posts on 友知弄</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 17 Nov 2019 00:22:22 +0800</lastBuildDate>
    
	<atom:link href="https://yixy.github.io/youzhilane/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git(10)-删除已经提交的历史文件</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git10-%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E6%8F%90%E4%BA%A4%E7%9A%84%E5%8E%86%E5%8F%B2%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 17 Nov 2019 00:22:22 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git10-%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E6%8F%90%E4%BA%A4%E7%9A%84%E5%8E%86%E5%8F%B2%E6%96%87%E4%BB%B6/</guid>
      <description>Git(10)-删除已经提交的历史文件 在使用Git时，即使使用git rm删除了某个文件，但仓库中实际上还是保存了这个文件。如果想要删除已经提</description>
    </item>
    
    <item>
      <title>Git(09)-远程仓库</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git09-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link>
      <pubDate>Sat, 16 Nov 2019 23:58:32 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git09-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid>
      <description>Git——远程仓库 1. 克隆（git clone） 可以使用git clone命令来备份仓库。git clone 支持采用多种协议表示仓库地址。 本地协议：file</description>
    </item>
    
    <item>
      <title>Git(08)-分支操作</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git08-%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 16 Nov 2019 23:54:48 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git08-%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</guid>
      <description>Git——分支操作 git中新建分支为什么快?由于Git 中的分支实际上仅是一个包含所指对象校验和（40 个字符长度SHA-1 字串）的文件，所以创</description>
    </item>
    
    <item>
      <title>Git(06)-探秘.git目录</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git06-%E6%8E%A2%E7%A7%98.git%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sat, 16 Nov 2019 23:42:59 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git06-%E6%8E%A2%E7%A7%98.git%E7%9B%AE%E5%BD%95/</guid>
      <description>Git——探秘.git目录 从根本上来讲Git 是一套内容寻址(content-addressable) 文件系统。从内部来看，Git 是简单的ke</description>
    </item>
    
    <item>
      <title>Git(05)-将文件纳入GIT仓库管理</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git05-%E5%B0%86%E6%96%87%E4%BB%B6%E7%BA%B3%E5%85%A5git%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 16 Nov 2019 23:41:13 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git05-%E5%B0%86%E6%96%87%E4%BB%B6%E7%BA%B3%E5%85%A5git%E4%BB%93%E5%BA%93%E7%AE%A1%E7%90%86/</guid>
      <description>Git——将文件纳入GIT仓库管理 1. unstaged文件移入暂存区（stage）并提交（commit） 通过在commit前增加一个暂存区的概</description>
    </item>
    
    <item>
      <title>Git(04)-.gitignore配置</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git04-.gitignore%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 16 Nov 2019 23:32:34 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git04-.gitignore%E9%85%8D%E7%BD%AE/</guid>
      <description>Git(04)-.gitignore配置 一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。这些通常都是些自动生成</description>
    </item>
    
    <item>
      <title>Git(03)-新建仓库</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git03-%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/</link>
      <pubDate>Sat, 16 Nov 2019 22:25:57 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git03-%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/</guid>
      <description>Git——新建仓库 1. 将已有项目代码纳入git管理 1 2 $ cd 项目代码目录 $ git init 2. 创建空白仓库 可以使用如下命令新建一个目录，并在该目录中创建一个空</description>
    </item>
    
    <item>
      <title>Git(02)-最小化配置</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git02-%E6%9C%80%E5%B0%8F%E5%8C%96%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 16 Nov 2019 21:58:52 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git02-%E6%9C%80%E5%B0%8F%E5%8C%96%E9%85%8D%E7%BD%AE/</guid>
      <description>Git——最小化配置 1. git config Git 提供了一个叫做git config 的工具（实际是git-config 命令，只不过可以通过git 加一个名字来呼叫此命令），专门</description>
    </item>
    
    <item>
      <title>Git(01)-版本控制系统简介</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git01-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sat, 16 Nov 2019 21:58:12 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/git/git01-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/</guid>
      <description>Git——版本控制系统 Git是一款免费、开源的分布式版本控制系统。 1. CVCS与DVCS 集中化版本控制系统（ Centralized Version Control Systems，简称CVCS</description>
    </item>
    
    <item>
      <title>Oracle高可用集群方案</title>
      <link>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/oracle%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 22 Oct 2019 19:23:51 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/oracle%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88/</guid>
      <description>RAC, Real Application Clusters 多个Oracle服务器组成一个共享的Cache，而这些Oracle服务器共享一个基于网络的存储。这个系统可以容忍单机/或是多机失败。</description>
    </item>
    
    <item>
      <title>Go语言测试(2)-使用mock测试</title>
      <link>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%952-%E4%BD%BF%E7%94%A8mock%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 30 Sep 2019 22:16:33 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%952-%E4%BD%BF%E7%94%A8mock%E6%B5%8B%E8%AF%95/</guid>
      <description>1。 使用接口作为参数，使用官方gomock golang原生单元测试的方法就是尽量使用接口作为参数（函数接收一个 interface类型的参数，</description>
    </item>
    
    <item>
      <title>Go语言测试(1)-单元测试与基准测试</title>
      <link>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%951-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B8%8E%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 30 Sep 2019 22:15:58 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%951-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B8%8E%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</guid>
      <description>1. 使用testing包进行单元测试与基准测试 Golang本身提供了对单元测试和基准测试的支持，引入testing包后，遵守如下约定使用即可。</description>
    </item>
    
    <item>
      <title>Go语言测试(3)-go test缓存机制</title>
      <link>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%953-go-test%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 30 Sep 2019 14:53:49 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%953-go-test%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>1. 单元测试中print时间输出不变的问题 写单元测试的时候发现如下测试案例输出结果不变，但是正常在main函数中编译执行是没有问题的。查了下文</description>
    </item>
    
    <item>
      <title>Go语言测试(4)-基准测试的StartTimer函数与内存分配</title>
      <link>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%954-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E7%9A%84starttimer%E5%87%BD%E6%95%B0%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link>
      <pubDate>Sat, 28 Sep 2019 21:59:14 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/06%E4%BA%91%E8%AE%A1%E7%AE%97/go%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80%E6%B5%8B%E8%AF%954-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E7%9A%84starttimer%E5%87%BD%E6%95%B0%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid>
      <description>1. 一次基准测试时发现的诡异问题 测试代码如下，StringSize和StringSizeBySizeTable两个函数正常应该都是纳秒级别返回</description>
    </item>
    
    <item>
      <title>判断整数的位数</title>
      <link>https://yixy.github.io/youzhilane/post/01%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%A4%E6%96%AD%E6%95%B4%E6%95%B0%E7%9A%84%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Sat, 28 Sep 2019 21:26:56 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/01%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%88%A4%E6%96%AD%E6%95%B4%E6%95%B0%E7%9A%84%E4%BD%8D%E6%95%B0/</guid>
      <description>如何判断整数的位数 判断一个整数的位数的方法很简单，只要循环除以10，直到商为0，循环了几次位数就是几。代码逻辑可以参考下节代码片段中Stri</description>
    </item>
    
    <item>
      <title>与etcd交互</title>
      <link>https://yixy.github.io/youzhilane/post/05%E5%88%86%E5%B8%83%E5%BC%8F/etcd/%E4%B8%8Eetcd%E4%BA%A4%E4%BA%92/</link>
      <pubDate>Sat, 28 Sep 2019 09:25:16 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/05%E5%88%86%E5%B8%83%E5%BC%8F/etcd/%E4%B8%8Eetcd%E4%BA%A4%E4%BA%92/</guid>
      <description>etcd交互场景 etcd本身是采用Golang实现的，支持多种语言客户端对接，同时也支持HTTP的API。 etcd官方文档（Interact</description>
    </item>
    
    <item>
      <title>ImageMagick</title>
      <link>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/imagemagick/</link>
      <pubDate>Thu, 26 Sep 2019 12:50:12 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/11%E5%85%B6%E4%BB%96/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/imagemagick/</guid>
      <description>ImageMagick简介 ImageMagick是一套功能强大、稳定而且开源的工具集和开发包，可以用来读、写和处理超过89种基本格式的图片文</description>
    </item>
    
    <item>
      <title>数据库系统(01)概念-数据库系统概念</title>
      <link>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F01%E6%A6%82%E5%BF%B5-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sun, 22 Sep 2019 21:41:52 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F01%E6%A6%82%E5%BF%B5-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/</guid>
      <description>0. 数据库系统的产生 人工管理-&amp;gt;文件系统-&amp;gt;数据库系统 1. 基本概念 从下往上看这张图。 图中的下半部分实际上就描述了一个数据库系统。典型</description>
    </item>
    
    <item>
      <title>数据库系统(02)设计-数据模式-数据模型</title>
      <link>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F02%E8%AE%BE%E8%AE%A1-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%BC%8F-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sun, 22 Sep 2019 21:41:52 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F02%E8%AE%BE%E8%AE%A1-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%BC%8F-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</guid>
      <description>1. 数据-数据模式-数据模型 数据（data）/视图（view）：某一表现形式下表现出来的数据库中的数据。 数据模式（schema）：数据模式是对</description>
    </item>
    
    <item>
      <title>数据库系统(03)设计-数据库发展史</title>
      <link>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F03%E8%AE%BE%E8%AE%A1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E5%8F%B2/</link>
      <pubDate>Sun, 22 Sep 2019 21:41:52 +0800</pubDate>
      
      <guid>https://yixy.github.io/youzhilane/post/04%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F03%E8%AE%BE%E8%AE%A1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%91%E5%B1%95%E5%8F%B2/</guid>
      <description>数据库发展史 待补充Nosql、分布式数据库的内容。 相关链接 《数据库系统》，哈工大，战德臣，幕客网上有相关视频，分为上中下 https://www.icourse163.org/u/981194?userId=1507001&amp;amp;_trace_c_p_k2_=de1921fe92e844fd9a1fd183586497a2</description>
    </item>
    
  </channel>
</rss>